<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zqw.agent_app.mapper.AgentMapper">

    <resultMap id="AgentResultMap" type="com.zqw.agent_app.model.po.AgentPO">
        <result property="agentId" column="agent_id" />
        <result property="agentName" column="agent_name" />
        <result property="userId" column="user_id" />
        <result property="description" column="description" />
        <result property="prompt" column="prompt" />
        <result property="configJson" column="config_json" />
        <result property="usageCount" column="usage_count" />
        <result property="createdTime" column="create_time" />
        <result property="updateTime" column="update_time" />
    </resultMap>

    <insert id="insertAgent" parameterType="com.zqw.agent_app.model.po.AgentPO" useGeneratedKeys="true" keyProperty="agentId">
        INSERT INTO agent (agent_name, user_id, description, prompt, config_json)
        VALUES (#{agentName}, #{userId}, #{description}, #{prompt}, #{configJson})
    </insert>

    <update id="updateUsageCountById">
        UPDATE agent
        SET usage_count = #{usageCount}
        WHERE agent_id = #{agentId}
    </update>
    <update id="updateAgent">
        UPDATE agent
        SET agent_name = #{agentName}, description = #{description}, prompt = #{prompt}, config_json = #{configJson}, update_time = #{updateTime}
        WHERE agent_id = #{agentId}
    </update>

    <update id="deleteAgent">
        UPDATE agent
        SET status = 0, update_time = #{updateTime}
        WHERE agent_id = #{agentId}
    </update>

    <select id="getAllAgentNum" resultType="int">
        SELECT COUNT(*)
        FROM agent
    </select>

    <select id="getLastWeekAgentNum" resultType="int">
        SELECT COUNT(*)
        FROM agent
        WHERE create_time >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK)
    </select>

    <select id="getHotModel" resultMap="AgentResultMap">
        SELECT agent_id, agent_name, usage_count
        FROM  agent
        WHERE status = 1
        ORDER BY usage_count DESC
        LIMIT 5;
    </select>

    <select id="getAgentById" resultMap="AgentResultMap">
        SELECT agent_id, agent_name, user_id, description, prompt, config_json, usage_count
        FROM agent
        WHERE agent_id = #{agentId}
    </select>

    <select id="fetchModel" resultMap="AgentResultMap">
        SELECT agent_id, agent_name, description, usage_count
        FROM agent
        WHERE status = 1
    </select>

    <select id="selectByKeyword" resultMap="AgentResultMap">
        SELECT agent_id, agent_name, description, usage_count
        FROM agent
        WHERE
            (agent_name LIKE CONCAT('%', #{keyword}, '%')
             OR description LIKE CONCAT('%', #{keyword}, '%'))
          AND status = 1
    </select>

    <select id="fetchModelByUserId" resultMap="AgentResultMap">
        SELECT agent_id, agent_name, description, usage_count
        FROM agent
        WHERE user_id = #{userId}
          AND status = 1
    </select>

</mapper>